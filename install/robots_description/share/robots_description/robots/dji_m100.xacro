<?xml version="1.0"?>


<robot name="dji_m100" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- <link name="base_link"></link> -->
    <link name="quadrotor">
      <inertial>
        <mass value="2.355" />
        <inertia ixx="0.01152" ixy="0.0" ixz="0.0" iyy="0.01152" iyz="0.0" izz="0.0218" />
      </inertial>
      <visual>
        <origin xyz="0 0 0.105" rpy="0 0 0" />
        <geometry>
          <mesh filename="$(find robots_description)/meshes/dji_m100.dae"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0.105" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.35" length="0.4"/> 
        </geometry>
      </collision>
    </link>
    <link name="rotor1">
      <inertial>
        <mass value="0.00001" />
        <inertia ixx="0.000000000001" ixy="0.0" ixz="0.0" iyy="0.0000000000000001" iyz="0.0" izz="0.00000000000000001" />
      </inertial>
    </link>
    <joint name="rotor1_joint" type="revolute">
      <origin xyz="0.229809 -0.229809 0.2" rpy="0.0 0.0 0.0" />
      <parent link="quadrotor"/>
      <child link="rotor1"/>
      <limit effort="0" velocity="00.0" lower="0.0" upper="0.0" />
    </joint>
    <link name="rotor2">
      <inertial>
        <mass value="0.00001" />
        <inertia ixx="0.000000000001" ixy="0.0" ixz="0.0" iyy="0.0000000000000001" iyz="0.0" izz="0.00000000000000001" />
      </inertial>
    </link>
    <joint name="rotor2_joint" type="revolute">
      <origin xyz="0.229809 0.229809 0.2" rpy="0.0 0.0 0.0" />

      <parent link="quadrotor"/>
      <child link="rotor2"/>
      <limit effort="0" velocity="00.0" lower="0.0" upper="0.0" />
    </joint>
    <link name="rotor3">
      <inertial>
        <mass value="0.00001" />
        <inertia ixx="0.000000000001" ixy="0.0" ixz="0.0" iyy="0.0000000000000001" iyz="0.0" izz="0.00000000000000001" />
      </inertial>
    </link>
    <joint name="rotor3_joint" type="revolute">
      <origin xyz="-0.229809 0.229809 0.2" rpy="0.0 0.0 0.0" />
      <parent link="quadrotor"/>
      <child link="rotor3"/>
      <limit effort="0" velocity="00.0" lower="0.0" upper="0.0" />
    </joint>
    <link name="rotor4">
      <inertial>
        <mass value="0.00001" />
        <inertia ixx="0.000000000001" ixy="0.0" ixz="0.0" iyy="0.0000000000000001" iyz="0.0" izz="0.00000000000000001" />
      </inertial>
    </link>
    <joint name="rotor4_joint" type="revolute">
      <origin xyz="-0.229809 -0.229809 0.2" rpy="0.0 0.0 0.0" />
      <parent link="quadrotor"/>
      <child link="rotor4"/>
      <limit effort="0" velocity="00.0" lower="0.0" upper="0.0" />
    </joint>

  <link name="camera_link">
      <inertial>
        <mass value="0.0010" />
        <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001" />
      </inertial>
    </link>
    <joint name='camera_joint' type='revolute'>
      <origin xyz="0 0 0" rpy="0 1.57079633 0"/>
      <parent link="quadrotor"/>
      <child link="camera_link"/>
    <limit effort="0" velocity="00.0" lower="0.0" upper="0.0" />

    </joint>

    <!--Gazebo elements -->
    <!-- reference to gazebo colors -->
    <!-- <gazebo reference="led_link">
      <material>Gazebo/Green</material>
    </gazebo> -->


  <gazebo>
  <plugin name="rotor1_thrust" filename="libgazebo_ros_force.so">

    <ros>
  
      <!-- Add a namespace -->
      <namespace>/quadrotor</namespace>
  
      <!-- Remap the default topic -->
      <remapping>gazebo_ros_force:=rotor1</remapping>
  
    </ros>
  
    <!-- Name of link within model which will receive the force -->
    <link_name>rotor1</link_name>
  
    <!-- Frame where the force/torque will be applied (options: world; link)-->
    <force_frame>link</force_frame>
  
  </plugin>
  <plugin name="rotor2_thrust" filename="libgazebo_ros_force.so">

    <ros>
  
      <!-- Add a namespace -->
      <namespace>/quadrotor</namespace>
  
      <!-- Remap the default topic -->
      <remapping>gazebo_ros_force:=rotor2</remapping>
  
    </ros>
  
    <!-- Name of link within model which will receive the force -->
    <link_name>rotor2</link_name>
  
    <!-- Frame where the force/torque will be applied (options: world; link)-->
    <force_frame>link</force_frame>
  
  </plugin>
  <plugin name="rotor3_thrust" filename="libgazebo_ros_force.so">

    <ros>
  
      <!-- Add a namespace -->
      <namespace>/quadrotor</namespace>
  
      <!-- Remap the default topic -->
      <remapping>gazebo_ros_force:=rotor3</remapping>
  
    </ros>
  
    <!-- Name of link within model which will receive the force -->
    <link_name>rotor3</link_name>
  
    <!-- Frame where the force/torque will be applied (options: world; link)-->
    <force_frame>link</force_frame>
  
  </plugin>
  <plugin name="rotor4_thrust" filename="libgazebo_ros_force.so">

    <ros>
  
      <!-- Add a namespace -->
      <namespace>/quadrotor</namespace>
  
      <!-- Remap the default topic -->
      <remapping>gazebo_ros_force:=rotor4</remapping>
  
    </ros>
  
    <!-- Name of link within model which will receive the force -->
    <link_name>rotor4</link_name>
  
    <!-- Frame where the force/torque will be applied (options: world; link)-->
    <force_frame>link</force_frame>
  
  </plugin>
  
  </gazebo>
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
        <ros>
  
          <namespace>/quadrotor</namespace>
          </ros>
      </plugin>
    </sensor>
  </gazebo>

</robot>
<!--gazebo -s libgazebo_ros_init.so -s libgazebo_ros_factory.so -s libgazebo_ros_force_system.so myworld.world-->
<!--export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:-->
